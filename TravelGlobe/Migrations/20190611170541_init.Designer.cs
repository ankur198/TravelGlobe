// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelGlobe.Models;

namespace TravelGlobe.Migrations
{
    [DbContext(typeof(TravelGlobeContext))]
    [Migration("20190611170541_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("TravelGlobe.Model.Activity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int?>("PositionID");

                    b.HasKey("ID");

                    b.HasIndex("PositionID");

                    b.ToTable("Activity");
                });

            modelBuilder.Entity("TravelGlobe.Model.Ikigai", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author")
                        .IsRequired();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Ikigai");
                });

            modelBuilder.Entity("TravelGlobe.Model.Position", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("IkigaiID");

                    b.Property<int>("Ikigai_ID");

                    b.Property<string>("position")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasIndex("IkigaiID");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("TravelGlobe.Model.Activity", b =>
                {
                    b.HasOne("TravelGlobe.Model.Position")
                        .WithMany("Activities")
                        .HasForeignKey("PositionID");
                });

            modelBuilder.Entity("TravelGlobe.Model.Position", b =>
                {
                    b.HasOne("TravelGlobe.Model.Ikigai")
                        .WithMany("Positions")
                        .HasForeignKey("IkigaiID");
                });
#pragma warning restore 612, 618
        }
    }
}
